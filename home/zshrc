source ~/.profile

# Variables
SAVEHIST=10000
HISTFILE=$HOME/.zsh_history
SHELLDIR=$HOME/.shell
export EDITOR=gvim

setopt autocd beep extendedglob nomatch
setopt autopushd pushdminus pushdsilent pushdtohome

# History
setopt appendhistory
setopt share_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_dups
setopt hist_verify
setopt inc_append_history

unsetopt notify
bindkey -v

zstyle ':completion:*' menu select
zstyle ':completion::complete:*' gain-privileges 1
autoload -Uz compinit
compinit

alias zshload="source ~/.zshrc"

source <(antibody init)

antibody bundle < ~/.zsh/plugins

zstyle :prompt:pure:git:stash show yes
autoload -U promptinit; promptinit
prompt pure

source $SHELLDIR/alias
source $SHELLDIR/functions

typeset -A key

key[Home]=${terminfo[khome]}
key[End]=${terminfo[kend]}
key[Insert]=${terminfo[kich1]}
key[Delete]=${terminfo[kdch1]}
key[Up]=${terminfo[kcuu1]}
key[Down]=${terminfo[kcud1]}
key[Left]=${terminfo[kcub1]}
key[Right]=${terminfo[kcuf1]}
key[PageUp]=${terminfo[kpp]}
key[PageDown]=${terminfo[knp]}

# setup key accordingly
[[ -n "${key[Home]}"    ]]  && bindkey  "${key[Home]}"    beginning-of-line
[[ -n "${key[End]}"     ]]  && bindkey  "${key[End]}"     end-of-line
[[ -n "${key[Insert]}"  ]]  && bindkey  "${key[Insert]}"  overwrite-mode
[[ -n "${key[Delete]}"  ]]  && bindkey  "${key[Delete]}"  delete-char
[[ -n "${key[Up]}"      ]]  && bindkey  "${key[Up]}"      up-line-or-history
[[ -n "${key[Down]}"    ]]  && bindkey  "${key[Down]}"    down-line-or-history
[[ -n "${key[Left]}"    ]]  && bindkey  "${key[Left]}"    backward-char
[[ -n "${key[Right]}"   ]]  && bindkey  "${key[Right]}"   forward-char

# Make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if [[ -n ${terminfo[smkx]} ]] && [[ -n ${terminfo[rmkx]} ]]; then
  function zle-line-init () {
    echoti smkx
  }
  function zle-line-finish () {
    echoti rmkx
  }
  zle -N zle-line-init
  zle -N zle-line-finish  
fi

test -r "~/.dir_colors" && eval $(dircolors ~/.dir_colors)

source /usr/share/doc/pkgfile/command-not-found.zsh

source /usr/share/nvm/init-nvm.sh

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

# Sometimes I have commands or properties that I want on only a single machine. The following checks
# for such a sourceable script and loads it.
if [[ -f $SHELLDIR/custom.sh ]]; then
  source $SHELLDIR/custom.sh
fi

# clear

