source ~/.profile

# Variables
SAVEHIST=10000
HISTFILE=$HOME/.zsh_history
BASH=$HOME/.bash

setopt autocd beep extendedglob nomatch

# History
setopt appendhistory
setopt share_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_dups
setopt hist_verify
setopt inc_append_history

unsetopt notify
bindkey -v

zstyle ':completion:*' menu select
autoload -Uz compinit
compinit

alias zshload="source ~/.zshrc"
source $HOME/.zplug/init.zsh

zplug "zsh-users/zsh-history-substring-search"
zplug "plugins/git",   from:oh-my-zsh
zplug "plugins/git-extras",   from:oh-my-zsh
zplug "plugins/git-remote-branch",   from:oh-my-zsh
zplug "plugins/gitfast",   from:oh-my-zsh
zplug "plugins/npm",   from:oh-my-zsh
zplug "plugins/systemd",   from:oh-my-zsh
zplug "plugins/vi-mode",   from:oh-my-zsh
zplug "plugins/tmux",   from:oh-my-zsh

# Load theme file
# zplug 'dracula/zsh', as:theme, use:dracula.zsh-theme
PHI="%(?,%{$fg_bold[green]%}φ,%{$fg_bold[red]%}φ)"
zplug 'LasaleFamine/phi-zsh-theme', as:theme, use:"*.zsh-theme"

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
  printf "Install? [y/N]: "
  if read -q; then
    echo; zplug install
  fi
fi

# Then, source plugins and add commands to $PATH
zplug load #--verbose

source $BASH/alias

typeset -A key

key[Home]=${terminfo[khome]}
key[End]=${terminfo[kend]}
key[Insert]=${terminfo[kich1]}
key[Delete]=${terminfo[kdch1]}
key[Up]=${terminfo[kcuu1]}
key[Down]=${terminfo[kcud1]}
key[Left]=${terminfo[kcub1]}
key[Right]=${terminfo[kcuf1]}
key[PageUp]=${terminfo[kpp]}
key[PageDown]=${terminfo[knp]}

# setup key accordingly
[[ -n "${key[Home]}"    ]]  && bindkey  "${key[Home]}"    beginning-of-line
[[ -n "${key[End]}"     ]]  && bindkey  "${key[End]}"     end-of-line
[[ -n "${key[Insert]}"  ]]  && bindkey  "${key[Insert]}"  overwrite-mode
[[ -n "${key[Delete]}"  ]]  && bindkey  "${key[Delete]}"  delete-char
[[ -n "${key[Up]}"      ]]  && bindkey  "${key[Up]}"      up-line-or-history
[[ -n "${key[Down]}"    ]]  && bindkey  "${key[Down]}"    down-line-or-history
[[ -n "${key[Left]}"    ]]  && bindkey  "${key[Left]}"    backward-char
[[ -n "${key[Right]}"   ]]  && bindkey  "${key[Right]}"   forward-char

# Make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if [[ -n ${terminfo[smkx]} ]] && [[ -n ${terminfo[rmkx]} ]]; then
  function zle-line-init () {
    echoti smkx
  }
  function zle-line-finish () {
    echoti rmkx
  }
  zle -N zle-line-init
  zle -N zle-line-finish  
fi

# Sometimes I have commands or properties that I want on only a single machine. The following checks
# for such a sourceable script and loads it.
if [[ -f $BASH/custom.sh ]]; then
  source $BASH/custom.sh
fi

clear

