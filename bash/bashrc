#!/bin/bash
# **.bashrc** is the primary user-specific Bash configuration file on
# Linux-based systems. It must be copied to or merged with $HOME/.bashrc and
# will be sourced on each new shell.
#
# My Bash configuration contains several convenience features as well as some
# defaults I find helpful in a Bash environment.
#
# This script has been tested on [Arch Linux][arch] with
# Bash 4.2.24.
#
# [arch]: http://www.archlinux.org

# ## Additional Configuration Files

SHELLDIR=$HOME/.shell

source $SHELLDIR/functions
source $SHELLDIR/alias
source $SHELLDIR/environment

# The [bash completion script][bash_completion] defines a set of additional
# Bash completion operations for commands not supported out of the box with the
# bash_completion package. These include allowing my sudo alias `s` to complete
# just like sudo.
#
source "$HOME"/.bash/completion

# ## Environment Variables

# I **love** Vim. Naturally, it is my editor of choice. The $EDITOR variable is
# used by many shell programs in Linux, so it is helpful to define, though most
# distributions contain a default. Too often, however, it is Nano, for which I
# do not care. God save the Vim.
export EDITOR=gvim

# If we're not running in an interactive session, we should exit immediately as
# these options are useless.
[ -z "$PS1" ] && return

# ## Shell Options

# The [bash prompts script][bash_prompt] provides a series of bash prompts
# that I have used, with only one being uncommented at any one time.
#
# [bash_prompt]: #home/bash/prompt
source "$HOME"/.bash/prompt

# ### checkwinsize
# This ensures that the LINES and COLUMNS are recalculated after
# running each command. My experience indicates this creates a more fluid user
# experience.
shopt -s checkwinsize

# ### cmdhist 
# This stores history as always one line. Therefore, if a command is typed as:
#
#     cmd \
#         -a flag1\
#         -b flag2
#
# it will always be stored as `cmd -a flag1 -b flag2` in history. I find this
# much easier for re-running commands, especially when they must be modified.
shopt -s cmdhist

# ### histappend 
# This is a useful option when one uses multiple terminals at one time
# (as I always do). This option will append each session's history to the
# $HISTFILE rather than replace it. This way, history from all terminals can be
# accessed through the `history` command.
shopt -s histappend

# ### no empty cmd completion
# This last option is just for performance; when there is nothing yet to
# complete, don't try to complete everything.
shopt -s no_empty_cmd_completion # don't complete empty lines

# ### nocaseglob
# The following line if uncommented will match Bash completion
# case-insensitively, so tabbing after `./thi` will complete `./This` and
# `./tHis` in addition to `./this` should they exist. The default behavior is
# case-sensitive. I find the case-insensitive version a tad annoying when I am
# familiar with the directory in which I reside as I do not want the additional
# completions. However, I include it here as some may find it useful.
#/ shopt -s nocaseglob # match filenames case-insensitively

# ### HISTCONTROL
# Changing the HISTCONTROL environment variable to `ignoredups` will prevent
# the same command in history from appearing more than once consecutively.
export HISTCONTROL=ignoredups

# ### dircolors
# This configuration file contains color output settings for `ls`. We only load
# it, however, if it exists and is readable. This extra control is done here
# because its output is directly evaluated by Bash which will lead some nasty
# errors if we the file doesn't exist.
test -r "$HOME"/bash/dircolors && eval "export $(dircolors -b $HOME/.bash/dircolors)"

# ## Color Variables

# The following are a series of colors that are available for other scripts,
# functions, and prompts to use when defining themselves. They are provided for
# convenience.
export fgblk="$(tput setaf 0)"     # Black - Regular
export fgred="$(tput setaf 1)"     # Red
export fggrn="$(tput setaf 2)"     # Green
export fgylw="$(tput setaf 3)"     # Yellow
export fgblu="$(tput setaf 4)"     # Blue
export fgpur="$(tput setaf 5)"     # Purple
export fgcyn="$(tput setaf 6)"     # Cyan
export fgwht="$(tput setaf 7)"     # White
export bfgblk="$(tput setaf 8)"    # Black - Intense
export bfgred="$(tput setaf 9)"    # Red
export bfggrn="$(tput setaf 10)"   # Green
export bfgylw="$(tput setaf 11)"   # Yellow
export bfgblu="$(tput setaf 12)"   # Blue
export bfgpur="$(tput setaf 13)"   # Purple
export bfgcyn="$(tput setaf 14)"   # Cyan
export bfgwht="$(tput setaf 15)"   # White
export bgblk="$(tput setab 0)"     # Black - Background
export bgred="$(tput setab 1)"     # Red
export bggrn="$(tput setab 2)"     # Green
export bgylw="$(tput setab 3)"     # Yellow
export bgblu="$(tput setab 4)"     # Blue
export bgpur="$(tput setab 5)"     # Purple
export bgcyn="$(tput setab 6)"     # Cyan
export bgwht="$(tput setab 7)"     # White
export bbgblk="$(tput setab 8)"    # Black - Background - Intense
export bbgred="$(tput setab 9)"    # Red
export bbggrn="$(tput setab 10)"   # Green
export bbgylw="$(tput setab 11)"   # Yellow
export bbgblu="$(tput setab 12)"   # Blue
export bbgpur="$(tput setab 13)"   # Purple
export bbgcyn="$(tput setab 14)"   # Cyan
export bbgwht="$(tput setab 15)"   # White
export normal="$(tput sgr0)"   # text reset
export undrln="$(tput smul)"   # underline
export noundr="$(tput rmul)"   # remove underline
export mkbold="$(tput bold)"   # make bold
export mkblnk="$(tput blink)"  # make blink
export revers="$(tput rev)"    # reverse


export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

source /home/joshua/.config/broot/launcher/bash/br
